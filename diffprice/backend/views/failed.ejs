<!DOCTYPE html>
<html>
<head>
<title>Payment Failed</title>
<style>
body { 
    font-family: sans-serif; 
    text-align: center; 
    padding-top: 50px; 
    background: #f8f8f8; 
}
.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}
.error-card, .debug-card { 
    background: white; 
    padding: 30px; 
    border-radius: 10px; 
    box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
    max-width: 500px; 
    margin: 0 auto 30px auto; 
}
.debug-card {
    max-width: 800px;
    text-align: left;
}
.error-icon { 
    color: #e74c3c; 
    font-size: 48px; 
    margin-bottom: 20px; 
}
.details { 
    text-align: left; 
    background: #f8f9fa; 
    padding: 15px; 
    border-radius: 5px; 
    margin-top: 20px; 
}
.btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: #007BFF;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    margin-top: 20px;
}
.btn:hover {
    background-color: #0056b3;
}
.debug-section {
    margin-bottom: 20px;
    padding: 15px;
    background: #f8f9fa;
    border-radius: 5px;
    border-left: 4px solid #007BFF;
}
.debug-section h4 {
    margin-top: 0;
    color: #333;
}
.code {
    background: #f1f1f1;
    padding: 10px;
    border-radius: 3px;
    font-family: 'Courier New', monospace;
    font-size: 12px;
    word-break: break-all;
    max-height: 200px;
    overflow-y: auto;
}
.json-pretty {
    background: #f1f1f1;
    padding: 10px;
    border-radius: 3px;
    font-family: 'Courier New', monospace;
    font-size: 12px;
    white-space: pre-wrap;
    max-height: 300px;
    overflow-y: auto;
}
.toggle-btn {
    background: #6c757d;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 3px;
    cursor: pointer;
    font-size: 12px;
    margin-top: 10px;
}
.toggle-btn:hover {
    background: #5a6268;
}
.debug-toggle {
    display: inline-block;
    padding: 10px 20px;
    background-color: #6c757d;
    color: white;
    text-decoration: none;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 20px;
    font-size: 16px;
}
.debug-toggle:hover {
    background-color: #5a6268;
}
.hidden {
    display: none;
}
.success-highlight {
    color: #28a745;
    font-weight: bold;
}
.error-highlight {
    color: #dc3545;
    font-weight: bold;
}
</style>
</head>
<body>
<div class="container">
<div class="error-card">
    <div class="error-icon">‚úï</div>
    <h1>Payment Failed</h1>
    <p><%= errorMessage %></p>
    <div class="details">
        <h3>Transaction Details:</h3>
        <p><strong>Transaction ID:</strong> <%= transactionId %></p>
        <p><strong>Amount:</strong> ‚Çπ<%= amount %></p>
        <p><strong>Status:</strong> Failed</p>
    </div>
    <a href="/" class="btn">Try Again</a>
    
    <% if (debugInfo) { %>
    <button class="debug-toggle" onclick="toggleDebug()">Show Debug Info</button>
    <% } %>
</div>

<% if (debugInfo) { %>
<div class="debug-card hidden" id="debug-info">
    <h2>Debug Information</h2>
    <p><em>This information helps developers understand what happened during the payment process.</em></p>
    
    <div class="debug-section">
        <h4>üì• Raw Gateway Response</h4>
        <div class="json-pretty"><%= JSON.stringify(debugInfo.rawResponse, null, 2) %></div>
    </div>

    <div class="debug-section">
        <h4>üîê Encrypted Message</h4>
        <p><strong>Length:</strong> <%= debugInfo.encryptedMessage.length %> characters</p>
        <div class="code" id="encrypted-msg"><%= debugInfo.encryptedMessage.substring(0, 100) %>...</div>
        <button class="toggle-btn" onclick="toggleContent('encrypted-msg', '<%= debugInfo.encryptedMessage %>')">Show Full</button>
    </div>

    <div class="debug-section">
        <h4>üîì Decrypted Message</h4>
        <% if (debugInfo.decryptedMessage && debugInfo.decryptedMessage !== 'Failed to decrypt') { %>
            <p class="success-highlight">‚úÖ Decryption successful</p>
        <% } else { %>
            <p class="error-highlight">‚ùå Decryption failed</p>
        <% } %>
        <div class="code"><%= debugInfo.decryptedMessage %></div>
    </div>

    <div class="debug-section">
        <h4>üìä Parsed Data</h4>
        <% if (debugInfo.parsedData && Object.keys(debugInfo.parsedData).length > 0) { %>
            <p class="success-highlight">‚úÖ Parsing successful</p>
            <div class="json-pretty"><%= JSON.stringify(debugInfo.parsedData, null, 2) %></div>
        <% } else { %>
            <p class="error-highlight">‚ùå No data parsed</p>
        <% } %>
    </div>

    <div class="debug-section">
        <h4>üí∞ Amount Extraction</h4>
        <p><strong>Extracted Amount:</strong> 
            <% if (debugInfo.extractedAmount && debugInfo.extractedAmount !== 'Not found' && debugInfo.extractedAmount !== 'N/A') { %>
                <span class="success-highlight">‚Çπ<%= debugInfo.extractedAmount %></span>
            <% } else { %>
                <span class="error-highlight"><%= debugInfo.extractedAmount %></span>
            <% } %>
        </p>
        <p><em>Note: Amount might not be present in failed transaction responses from some payment gateways.</em></p>
    </div>

    <% if (debugInfo.error) { %>
    <div class="debug-section">
        <h4>‚ö†Ô∏è Processing Error</h4>
        <p class="error-highlight"><%= debugInfo.error %></p>
    </div>
    <% } %>
</div>
<% } %>
</div>

<script>
    function toggleContent(elementId, fullContent) {
        const element = document.getElementById(elementId);
        const button = element.nextElementSibling;
        
        if (button.textContent === 'Show Full') {
            element.textContent = fullContent;
            button.textContent = 'Show Less';
        } else {
            element.textContent = fullContent.substring(0, 100) + '...';
            button.textContent = 'Show Full';
        }
    }

    function toggleDebug() {
        const debugInfo = document.getElementById('debug-info');
        const toggleBtn = document.querySelector('.debug-toggle');
        
        if (debugInfo.classList.contains('hidden')) {
            debugInfo.classList.remove('hidden');
            toggleBtn.textContent = 'Hide Debug Info';
        } else {
            debugInfo.classList.add('hidden');
            toggleBtn.textContent = 'Show Debug Info';
        }
    }
</script>
</body>
</html>